package com.technovator.api.common.domain;

import java.io.Serializable;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Id;
import javax.persistence.MappedSuperclass;
import javax.validation.constraints.Size;

import com.fasterxml.jackson.annotation.JsonView;
import com.technovator.api.common.annotations.AutoGeneratedUUID;
import com.technovator.api.common.annotations.LifecycleStatus;
import com.technovator.api.common.constants.Views;

import io.swagger.annotations.ApiModelProperty;
import io.swagger.annotations.ApiModelProperty.AccessMode;

@MappedSuperclass
public abstract class AbstractResource<ID extends Serializable> implements IdentifiableEntity<ID> {

	@Id
	@Column(name="ID")
	@ApiModelProperty(value = "Internal ID", position = 1, required=true)
	@JsonView(value = {Views.List.class})
	@AutoGeneratedUUID
	private ID id;
	
	@Column(name="CREATE_DATE")
	@JsonView(value=Views.List.class)
	@ApiModelProperty(value = "Date when this record was created", position = 50, accessMode = AccessMode.READ_ONLY)
	private Date createDate;
	
	@Column(name="CREATE_USER")
	@JsonView(value=Views.List.class)
	@Size(min = 1, max = 50)
	@ApiModelProperty(value = "User who created this record.", position = 51, accessMode = AccessMode.READ_ONLY)
	private String createUser;

	@Column(name="IS_DISABLED")
	@ApiModelProperty(value = "'true' if the entry is disabled i.e. not in use", position = 52,example = "false")
	@JsonView(value= {Views.Update.class,Views.List.class})
	@LifecycleStatus	
	private Boolean isDisabled;	
	
	public Date getCreateDate() {
		return createDate;
	}
	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}
	public String getCreateUser() {
		return createUser;
	}
	public void setCreateUser(String createUser) {
		this.createUser = createUser;
	}
	public ID getId() {
		return id;
	}
	public void setId(ID id) {
		this.id = id;
	}
	public Boolean getIsDisabled() {
		return isDisabled;
	}
	public void setIsDisabled(Boolean isDisabled) {
		this.isDisabled = isDisabled;
	}

}
